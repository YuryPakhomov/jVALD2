//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.04.19 at 05:44:29 PM MSD 
//


package org.vamdc.xsams;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.vamdc.xsams package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ReactantsTypeStateRef_QNAME = new QName("", "StateRef");
    private final static QName _RoVibronicSplittingTypeType_QNAME = new QName("", "Type");
    private final static QName _RoVibronicSplittingTypeLabel_QNAME = new QName("", "Label");
    private final static QName _HyperfineQuantumNumbersTypeIntermediateHyperfineQuantumNumber_QNAME = new QName("", "IntermediateHyperfineQuantumNumber");
    private final static QName _HyperfineQuantumNumbersTypeISum_QNAME = new QName("", "ISum");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.vamdc.xsams
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MolecularChemicalSpeciesType }
     * 
     */
    public MolecularChemicalSpeciesType createMolecularChemicalSpeciesType() {
        return new MolecularChemicalSpeciesType();
    }

    /**
     * Create an instance of {@link AtomicCompositionType }
     * 
     */
    public AtomicCompositionType createAtomicCompositionType() {
        return new AtomicCompositionType();
    }

    /**
     * Create an instance of {@link JKCouplingType }
     * 
     */
    public JKCouplingType createJKCouplingType() {
        return new JKCouplingType();
    }

    /**
     * Create an instance of {@link MolecularStateCharacterisationOldType }
     * 
     */
    public MolecularStateCharacterisationOldType createMolecularStateCharacterisationOldType() {
        return new MolecularStateCharacterisationOldType();
    }

    /**
     * Create an instance of {@link NonRadiative }
     * 
     */
    public NonRadiative createNonRadiative() {
        return new NonRadiative();
    }

    /**
     * Create an instance of {@link TotalSpinMomentumSType }
     * 
     */
    public TotalSpinMomentumSType createTotalSpinMomentumSType() {
        return new TotalSpinMomentumSType();
    }

    /**
     * Create an instance of {@link LSCouplingType }
     * 
     */
    public LSCouplingType createLSCouplingType() {
        return new LSCouplingType();
    }

    /**
     * Create an instance of {@link DataType }
     * 
     */
    public DataType createDataType() {
        return new DataType();
    }

    /**
     * Create an instance of {@link HundCaseBType }
     * 
     */
    public HundCaseBType createHundCaseBType() {
        return new HundCaseBType();
    }

    /**
     * Create an instance of {@link LinearNoElecNoHyperFType }
     * 
     */
    public LinearNoElecNoHyperFType createLinearNoElecNoHyperFType() {
        return new LinearNoElecNoHyperFType();
    }

    /**
     * Create an instance of {@link ShellPairType }
     * 
     */
    public ShellPairType createShellPairType() {
        return new ShellPairType();
    }

    /**
     * Create an instance of {@link AtomicStateType }
     * 
     */
    public AtomicStateType createAtomicStateType() {
        return new AtomicStateType();
    }

    /**
     * Create an instance of {@link StatesType }
     * 
     */
    public StatesType createStatesType() {
        return new StatesType();
    }

    /**
     * Create an instance of {@link MolecularStateCharacterisationType }
     * 
     */
    public MolecularStateCharacterisationType createMolecularStateCharacterisationType() {
        return new MolecularStateCharacterisationType();
    }

    /**
     * Create an instance of {@link MoleculeType }
     * 
     */
    public MoleculeType createMoleculeType() {
        return new MoleculeType();
    }

    /**
     * Create an instance of {@link SuperConfigurationType }
     * 
     */
    public SuperConfigurationType createSuperConfigurationType() {
        return new SuperConfigurationType();
    }

    /**
     * Create an instance of {@link MolecularQuantumNumberType }
     * 
     */
    public MolecularQuantumNumberType createMolecularQuantumNumberType() {
        return new MolecularQuantumNumberType();
    }

    /**
     * Create an instance of {@link NonLinearElecNoHyperFType }
     * 
     */
    public NonLinearElecNoHyperFType createNonLinearElecNoHyperFType() {
        return new NonLinearElecNoHyperFType();
    }

    /**
     * Create an instance of {@link PseudoStatisticalWeightType }
     * 
     */
    public PseudoStatisticalWeightType createPseudoStatisticalWeightType() {
        return new PseudoStatisticalWeightType();
    }

    /**
     * Create an instance of {@link FitDataType }
     * 
     */
    public FitDataType createFitDataType() {
        return new FitDataType();
    }

    /**
     * Create an instance of {@link ExpressionType }
     * 
     */
    public ExpressionType createExpressionType() {
        return new ExpressionType();
    }

    /**
     * Create an instance of {@link HyperfineCaseABetaType }
     * 
     */
    public HyperfineCaseABetaType createHyperfineCaseABetaType() {
        return new HyperfineCaseABetaType();
    }

    /**
     * Create an instance of {@link ShellsType }
     * 
     */
    public ShellsType createShellsType() {
        return new ShellsType();
    }

    /**
     * Create an instance of {@link AtomType }
     * 
     */
    public AtomType createAtomType() {
        return new AtomType();
    }

    /**
     * Create an instance of {@link RadiativeTransitionType }
     * 
     */
    public RadiativeTransitionType createRadiativeTransitionType() {
        return new RadiativeTransitionType();
    }

    /**
     * Create an instance of {@link NonLinearElecCouplingType }
     * 
     */
    public NonLinearElecCouplingType createNonLinearElecCouplingType() {
        return new NonLinearElecCouplingType();
    }

    /**
     * Create an instance of {@link ParameterType }
     * 
     */
    public ParameterType createParameterType() {
        return new ParameterType();
    }

    /**
     * Create an instance of {@link StateEnergyType }
     * 
     */
    public StateEnergyType createStateEnergyType() {
        return new StateEnergyType();
    }

    /**
     * Create an instance of {@link EditorsType }
     * 
     */
    public EditorsType createEditorsType() {
        return new EditorsType();
    }

    /**
     * Create an instance of {@link HyperfineCaseAAlphaType }
     * 
     */
    public HyperfineCaseAAlphaType createHyperfineCaseAAlphaType() {
        return new HyperfineCaseAAlphaType();
    }

    /**
     * Create an instance of {@link ChemicalElementType }
     * 
     */
    public ChemicalElementType createChemicalElementType() {
        return new ChemicalElementType();
    }

    /**
     * Create an instance of {@link AtomicCoreType }
     * 
     */
    public AtomicCoreType createAtomicCoreType() {
        return new AtomicCoreType();
    }

    /**
     * Create an instance of {@link NonLinearNoElecType }
     * 
     */
    public NonLinearNoElecType createNonLinearNoElecType() {
        return new NonLinearNoElecType();
    }

    /**
     * Create an instance of {@link DataSetType }
     * 
     */
    public DataSetType createDataSetType() {
        return new DataSetType();
    }

    /**
     * Create an instance of {@link ValueType }
     * 
     */
    public ValueType createValueType() {
        return new ValueType();
    }

    /**
     * Create an instance of {@link Functions }
     * 
     */
    public Functions createFunctions() {
        return new Functions();
    }

    /**
     * Create an instance of {@link AuthorType }
     * 
     */
    public AuthorType createAuthorType() {
        return new AuthorType();
    }

    /**
     * Create an instance of {@link MaterialCompositionType }
     * 
     */
    public MaterialCompositionType createMaterialCompositionType() {
        return new MaterialCompositionType();
    }

    /**
     * Create an instance of {@link DiatomAndLinearPolyatomicType }
     * 
     */
    public DiatomAndLinearPolyatomicType createDiatomAndLinearPolyatomicType() {
        return new DiatomAndLinearPolyatomicType();
    }

    /**
     * Create an instance of {@link MolecularStateType }
     * 
     */
    public MolecularStateType createMolecularStateType() {
        return new MolecularStateType();
    }

    /**
     * Create an instance of {@link BondArrayType }
     * 
     */
    public BondArrayType createBondArrayType() {
        return new BondArrayType();
    }

    /**
     * Create an instance of {@link AsymmetricProjectionType }
     * 
     */
    public AsymmetricProjectionType createAsymmetricProjectionType() {
        return new AsymmetricProjectionType();
    }

    /**
     * Create an instance of {@link NonLinearNoElecHyperFType }
     * 
     */
    public NonLinearNoElecHyperFType createNonLinearNoElecHyperFType() {
        return new NonLinearNoElecHyperFType();
    }

    /**
     * Create an instance of {@link MoleculesType }
     * 
     */
    public MoleculesType createMoleculesType() {
        return new MoleculesType();
    }

    /**
     * Create an instance of {@link CharacterisationType }
     * 
     */
    public CharacterisationType createCharacterisationType() {
        return new CharacterisationType();
    }

    /**
     * Create an instance of {@link ConfigurationType }
     * 
     */
    public ConfigurationType createConfigurationType() {
        return new ConfigurationType();
    }

    /**
     * Create an instance of {@link NonRadiativeTransitionType }
     * 
     */
    public NonRadiativeTransitionType createNonRadiativeTransitionType() {
        return new NonRadiativeTransitionType();
    }

    /**
     * Create an instance of {@link MolecularPropertiesType }
     * 
     */
    public MolecularPropertiesType createMolecularPropertiesType() {
        return new MolecularPropertiesType();
    }

    /**
     * Create an instance of {@link C2SymmetriesType }
     * 
     */
    public C2SymmetriesType createC2SymmetriesType() {
        return new C2SymmetriesType();
    }

    /**
     * Create an instance of {@link FitParametersType }
     * 
     */
    public FitParametersType createFitParametersType() {
        return new FitParametersType();
    }

    /**
     * Create an instance of {@link FitValidityLimitsType }
     * 
     */
    public FitValidityLimitsType createFitValidityLimitsType() {
        return new FitValidityLimitsType();
    }

    /**
     * Create an instance of {@link AtomArrayType }
     * 
     */
    public AtomArrayType createAtomArrayType() {
        return new AtomArrayType();
    }

    /**
     * Create an instance of {@link XSAMSData }
     * 
     */
    public XSAMSData createXSAMSData() {
        return new XSAMSData();
    }

    /**
     * Create an instance of {@link MethodType }
     * 
     */
    public MethodType createMethodType() {
        return new MethodType();
    }

    /**
     * Create an instance of {@link FunctionType }
     * 
     */
    public FunctionType createFunctionType() {
        return new FunctionType();
    }

    /**
     * Create an instance of {@link LinearElecCouplingType }
     * 
     */
    public LinearElecCouplingType createLinearElecCouplingType() {
        return new LinearElecCouplingType();
    }

    /**
     * Create an instance of {@link ReferencedTextType }
     * 
     */
    public ReferencedTextType createReferencedTextType() {
        return new ReferencedTextType();
    }

    /**
     * Create an instance of {@link ElectronicCharacterisationType }
     * 
     */
    public ElectronicCharacterisationType createElectronicCharacterisationType() {
        return new ElectronicCharacterisationType();
    }

    /**
     * Create an instance of {@link MoleculeNuclearSpinsType }
     * 
     */
    public MoleculeNuclearSpinsType createMoleculeNuclearSpinsType() {
        return new MoleculeNuclearSpinsType();
    }

    /**
     * Create an instance of {@link MolecularProjectionType }
     * 
     */
    public MolecularProjectionType createMolecularProjectionType() {
        return new MolecularProjectionType();
    }

    /**
     * Create an instance of {@link Atoms }
     * 
     */
    public Atoms createAtoms() {
        return new Atoms();
    }

    /**
     * Create an instance of {@link Particles }
     * 
     */
    public Particles createParticles() {
        return new Particles();
    }

    /**
     * Create an instance of {@link NonLinearPolyatomicType }
     * 
     */
    public NonLinearPolyatomicType createNonLinearPolyatomicType() {
        return new NonLinearPolyatomicType();
    }

    /**
     * Create an instance of {@link DataXYType }
     * 
     */
    public DataXYType createDataXYType() {
        return new DataXYType();
    }

    /**
     * Create an instance of {@link HundCaseAType }
     * 
     */
    public HundCaseAType createHundCaseAType() {
        return new HundCaseAType();
    }

    /**
     * Create an instance of {@link VibrationalHomeType }
     * 
     */
    public VibrationalHomeType createVibrationalHomeType() {
        return new VibrationalHomeType();
    }

    /**
     * Create an instance of {@link NonLinearElecHyperFType }
     * 
     */
    public NonLinearElecHyperFType createNonLinearElecHyperFType() {
        return new NonLinearElecHyperFType();
    }

    /**
     * Create an instance of {@link ElectronicComponentType }
     * 
     */
    public ElectronicComponentType createElectronicComponentType() {
        return new ElectronicComponentType();
    }

    /**
     * Create an instance of {@link IonStateType }
     * 
     */
    public IonStateType createIonStateType() {
        return new IonStateType();
    }

    /**
     * Create an instance of {@link MixingCoefficientType }
     * 
     */
    public MixingCoefficientType createMixingCoefficientType() {
        return new MixingCoefficientType();
    }

    /**
     * Create an instance of {@link RotationalComponentType }
     * 
     */
    public RotationalComponentType createRotationalComponentType() {
        return new RotationalComponentType();
    }

    /**
     * Create an instance of {@link MagneticQuantumNumberType }
     * 
     */
    public MagneticQuantumNumberType createMagneticQuantumNumberType() {
        return new MagneticQuantumNumberType();
    }

    /**
     * Create an instance of {@link AuthorsType }
     * 
     */
    public AuthorsType createAuthorsType() {
        return new AuthorsType();
    }

    /**
     * Create an instance of {@link IsotopeType }
     * 
     */
    public IsotopeType createIsotopeType() {
        return new IsotopeType();
    }

    /**
     * Create an instance of {@link MaterialComponentType }
     * 
     */
    public MaterialComponentType createMaterialComponentType() {
        return new MaterialComponentType();
    }

    /**
     * Create an instance of {@link ComplexMolecularQuantumNumberType }
     * 
     */
    public ComplexMolecularQuantumNumberType createComplexMolecularQuantumNumberType() {
        return new ComplexMolecularQuantumNumberType();
    }

    /**
     * Create an instance of {@link VibrationalComponentType }
     * 
     */
    public VibrationalComponentType createVibrationalComponentType() {
        return new VibrationalComponentType();
    }

    /**
     * Create an instance of {@link SimpleSymbolType }
     * 
     */
    public SimpleSymbolType createSimpleSymbolType() {
        return new SimpleSymbolType();
    }

    /**
     * Create an instance of {@link OrbitalAngularMomentumType }
     * 
     */
    public OrbitalAngularMomentumType createOrbitalAngularMomentumType() {
        return new OrbitalAngularMomentumType();
    }

    /**
     * Create an instance of {@link Methods }
     * 
     */
    public Methods createMethods() {
        return new Methods();
    }

    /**
     * Create an instance of {@link ParticleType }
     * 
     */
    public ParticleType createParticleType() {
        return new ParticleType();
    }

    /**
     * Create an instance of {@link DataTableType }
     * 
     */
    public DataTableType createDataTableType() {
        return new DataTableType();
    }

    /**
     * Create an instance of {@link ElectronicHomeType }
     * 
     */
    public ElectronicHomeType createElectronicHomeType() {
        return new ElectronicHomeType();
    }

    /**
     * Create an instance of {@link SolidType }
     * 
     */
    public SolidType createSolidType() {
        return new SolidType();
    }

    /**
     * Create an instance of {@link TabulatedDataType }
     * 
     */
    public TabulatedDataType createTabulatedDataType() {
        return new TabulatedDataType();
    }

    /**
     * Create an instance of {@link SourceType }
     * 
     */
    public SourceType createSourceType() {
        return new SourceType();
    }

    /**
     * Create an instance of {@link RadiativeTransitionProbabilityType }
     * 
     */
    public RadiativeTransitionProbabilityType createRadiativeTransitionProbabilityType() {
        return new RadiativeTransitionProbabilityType();
    }

    /**
     * Create an instance of {@link CollisionalProcessClassType }
     * 
     */
    public CollisionalProcessClassType createCollisionalProcessClassType() {
        return new CollisionalProcessClassType();
    }

    /**
     * Create an instance of {@link IsotopeParametersType }
     * 
     */
    public IsotopeParametersType createIsotopeParametersType() {
        return new IsotopeParametersType();
    }

    /**
     * Create an instance of {@link Solids }
     * 
     */
    public Solids createSolids() {
        return new Solids();
    }

    /**
     * Create an instance of {@link Radiative }
     * 
     */
    public Radiative createRadiative() {
        return new Radiative();
    }

    /**
     * Create an instance of {@link ParticlePropertiesType }
     * 
     */
    public ParticlePropertiesType createParticlePropertiesType() {
        return new ParticlePropertiesType();
    }

    /**
     * Create an instance of {@link RoVibronicSplittingType }
     * 
     */
    public RoVibronicSplittingType createRoVibronicSplittingType() {
        return new RoVibronicSplittingType();
    }

    /**
     * Create an instance of {@link TermType }
     * 
     */
    public TermType createTermType() {
        return new TermType();
    }

    /**
     * Create an instance of {@link AtomicNumericalDataType }
     * 
     */
    public AtomicNumericalDataType createAtomicNumericalDataType() {
        return new AtomicNumericalDataType();
    }

    /**
     * Create an instance of {@link RotationalHomeType }
     * 
     */
    public RotationalHomeType createRotationalHomeType() {
        return new RotationalHomeType();
    }

    /**
     * Create an instance of {@link LKCouplingType }
     * 
     */
    public LKCouplingType createLKCouplingType() {
        return new LKCouplingType();
    }

    /**
     * Create an instance of {@link ParametersType }
     * 
     */
    public ParametersType createParametersType() {
        return new ParametersType();
    }

    /**
     * Create an instance of {@link HinderedMotionType }
     * 
     */
    public HinderedMotionType createHinderedMotionType() {
        return new HinderedMotionType();
    }

    /**
     * Create an instance of {@link CentralSymbolType }
     * 
     */
    public CentralSymbolType createCentralSymbolType() {
        return new CentralSymbolType();
    }

    /**
     * Create an instance of {@link SymbolType }
     * 
     */
    public SymbolType createSymbolType() {
        return new SymbolType();
    }

    /**
     * Create an instance of {@link AtomicQuantumNumbersType }
     * 
     */
    public AtomicQuantumNumbersType createAtomicQuantumNumbersType() {
        return new AtomicQuantumNumbersType();
    }

    /**
     * Create an instance of {@link MaterialType }
     * 
     */
    public MaterialType createMaterialType() {
        return new MaterialType();
    }

    /**
     * Create an instance of {@link DataSetsType }
     * 
     */
    public DataSetsType createDataSetsType() {
        return new DataSetsType();
    }

    /**
     * Create an instance of {@link BondType }
     * 
     */
    public BondType createBondType() {
        return new BondType();
    }

    /**
     * Create an instance of {@link ProductsType }
     * 
     */
    public ProductsType createProductsType() {
        return new ProductsType();
    }

    /**
     * Create an instance of {@link ArgumentsType }
     * 
     */
    public ArgumentsType createArgumentsType() {
        return new ArgumentsType();
    }

    /**
     * Create an instance of {@link RotationalCharacterisationType }
     * 
     */
    public RotationalCharacterisationType createRotationalCharacterisationType() {
        return new RotationalCharacterisationType();
    }

    /**
     * Create an instance of {@link CollisionalTransitionType }
     * 
     */
    public CollisionalTransitionType createCollisionalTransitionType() {
        return new CollisionalTransitionType();
    }

    /**
     * Create an instance of {@link AtomicComponentType }
     * 
     */
    public AtomicComponentType createAtomicComponentType() {
        return new AtomicComponentType();
    }

    /**
     * Create an instance of {@link JjCouplingType }
     * 
     */
    public JjCouplingType createJjCouplingType() {
        return new JjCouplingType();
    }

    /**
     * Create an instance of {@link ProcessesType }
     * 
     */
    public ProcessesType createProcessesType() {
        return new ProcessesType();
    }

    /**
     * Create an instance of {@link HyperfineQuantumNumbersType }
     * 
     */
    public HyperfineQuantumNumbersType createHyperfineQuantumNumbersType() {
        return new HyperfineQuantumNumbersType();
    }

    /**
     * Create an instance of {@link EnergyWavelengthType }
     * 
     */
    public EnergyWavelengthType createEnergyWavelengthType() {
        return new EnergyWavelengthType();
    }

    /**
     * Create an instance of {@link NonLinearNoElecNoHyperFType }
     * 
     */
    public NonLinearNoElecNoHyperFType createNonLinearNoElecNoHyperFType() {
        return new NonLinearNoElecNoHyperFType();
    }

    /**
     * Create an instance of {@link LinearNoElecHyperFType }
     * 
     */
    public LinearNoElecHyperFType createLinearNoElecHyperFType() {
        return new LinearNoElecHyperFType();
    }

    /**
     * Create an instance of {@link ReactantsType }
     * 
     */
    public ReactantsType createReactantsType() {
        return new ReactantsType();
    }

    /**
     * Create an instance of {@link WavelengthWavenumberType }
     * 
     */
    public WavelengthWavenumberType createWavelengthWavenumberType() {
        return new WavelengthWavenumberType();
    }

    /**
     * Create an instance of {@link AtomNType }
     * 
     */
    public AtomNType createAtomNType() {
        return new AtomNType();
    }

    /**
     * Create an instance of {@link VibrationalCharacterisationType }
     * 
     */
    public VibrationalCharacterisationType createVibrationalCharacterisationType() {
        return new VibrationalCharacterisationType();
    }

    /**
     * Create an instance of {@link SuperShellType }
     * 
     */
    public SuperShellType createSuperShellType() {
        return new SuperShellType();
    }

    /**
     * Create an instance of {@link PrimaryType }
     * 
     */
    public PrimaryType createPrimaryType() {
        return new PrimaryType();
    }

    /**
     * Create an instance of {@link HyperfineCouplingBType }
     * 
     */
    public HyperfineCouplingBType createHyperfineCouplingBType() {
        return new HyperfineCouplingBType();
    }

    /**
     * Create an instance of {@link ArgumentType }
     * 
     */
    public ArgumentType createArgumentType() {
        return new ArgumentType();
    }

    /**
     * Create an instance of {@link ShellType }
     * 
     */
    public ShellType createShellType() {
        return new ShellType();
    }

    /**
     * Create an instance of {@link Collisions }
     * 
     */
    public Collisions createCollisions() {
        return new Collisions();
    }

    /**
     * Create an instance of {@link VibrationalQuantumNumbersType }
     * 
     */
    public VibrationalQuantumNumbersType createVibrationalQuantumNumbersType() {
        return new VibrationalQuantumNumbersType();
    }

    /**
     * Create an instance of {@link Sources }
     * 
     */
    public Sources createSources() {
        return new Sources();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "StateRef", scope = ReactantsType.class)
    @XmlIDREF
    public JAXBElement<Object> createReactantsTypeStateRef(Object value) {
        return new JAXBElement<Object>(_ReactantsTypeStateRef_QNAME, Object.class, ReactantsType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Type", scope = RoVibronicSplittingType.class)
    public JAXBElement<String> createRoVibronicSplittingTypeType(String value) {
        return new JAXBElement<String>(_RoVibronicSplittingTypeType_QNAME, String.class, RoVibronicSplittingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Label", scope = RoVibronicSplittingType.class)
    public JAXBElement<String> createRoVibronicSplittingTypeLabel(String value) {
        return new JAXBElement<String>(_RoVibronicSplittingTypeLabel_QNAME, String.class, RoVibronicSplittingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "StateRef", scope = ProductsType.class)
    @XmlIDREF
    public JAXBElement<Object> createProductsTypeStateRef(Object value) {
        return new JAXBElement<Object>(_ReactantsTypeStateRef_QNAME, Object.class, ProductsType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComplexMolecularQuantumNumberType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "IntermediateHyperfineQuantumNumber", scope = HyperfineQuantumNumbersType.class)
    public JAXBElement<ComplexMolecularQuantumNumberType> createHyperfineQuantumNumbersTypeIntermediateHyperfineQuantumNumber(ComplexMolecularQuantumNumberType value) {
        return new JAXBElement<ComplexMolecularQuantumNumberType>(_HyperfineQuantumNumbersTypeIntermediateHyperfineQuantumNumber_QNAME, ComplexMolecularQuantumNumberType.class, HyperfineQuantumNumbersType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComplexMolecularQuantumNumberType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ISum", scope = HyperfineQuantumNumbersType.class)
    public JAXBElement<ComplexMolecularQuantumNumberType> createHyperfineQuantumNumbersTypeISum(ComplexMolecularQuantumNumberType value) {
        return new JAXBElement<ComplexMolecularQuantumNumberType>(_HyperfineQuantumNumbersTypeISum_QNAME, ComplexMolecularQuantumNumberType.class, HyperfineQuantumNumbersType.class, value);
    }

}
