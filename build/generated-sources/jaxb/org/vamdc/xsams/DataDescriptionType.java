//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.04.19 at 05:44:29 PM MSD 
//


package org.vamdc.xsams;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DataDescriptionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DataDescriptionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="crossSection"/>
 *     &lt;enumeration value="collisionStrength"/>
 *     &lt;enumeration value="rateCoefficient"/>
 *     &lt;enumeration value="probability"/>
 *     &lt;enumeration value="effectiveCollisionStrength"/>
 *     &lt;enumeration value="sputteringYield"/>
 *     &lt;enumeration value="sputteredEnergyCoefficient"/>
 *     &lt;enumeration value="particleReflectionCoefficient"/>
 *     &lt;enumeration value="energyReflectionCoefficient"/>
 *     &lt;enumeration value="meanPenetrationDepth"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DataDescriptionType")
@XmlEnum
public enum DataDescriptionType {

    @XmlEnumValue("crossSection")
    CROSS_SECTION("crossSection"),
    @XmlEnumValue("collisionStrength")
    COLLISION_STRENGTH("collisionStrength"),
    @XmlEnumValue("rateCoefficient")
    RATE_COEFFICIENT("rateCoefficient"),
    @XmlEnumValue("probability")
    PROBABILITY("probability"),
    @XmlEnumValue("effectiveCollisionStrength")
    EFFECTIVE_COLLISION_STRENGTH("effectiveCollisionStrength"),
    @XmlEnumValue("sputteringYield")
    SPUTTERING_YIELD("sputteringYield"),
    @XmlEnumValue("sputteredEnergyCoefficient")
    SPUTTERED_ENERGY_COEFFICIENT("sputteredEnergyCoefficient"),
    @XmlEnumValue("particleReflectionCoefficient")
    PARTICLE_REFLECTION_COEFFICIENT("particleReflectionCoefficient"),
    @XmlEnumValue("energyReflectionCoefficient")
    ENERGY_REFLECTION_COEFFICIENT("energyReflectionCoefficient"),
    @XmlEnumValue("meanPenetrationDepth")
    MEAN_PENETRATION_DEPTH("meanPenetrationDepth");
    private final String value;

    DataDescriptionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DataDescriptionType fromValue(String v) {
        for (DataDescriptionType c: DataDescriptionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
